// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="decode,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325t-ffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.549500,HLS_SYN_LAT=26070423,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=689,HLS_SYN_LUT=4889,HLS_VERSION=2020_1}" *)

module decode (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        c_q0
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_pp0_stage0 = 17'd16;
parameter    ap_ST_fsm_state7 = 17'd32;
parameter    ap_ST_fsm_state8 = 17'd64;
parameter    ap_ST_fsm_state9 = 17'd128;
parameter    ap_ST_fsm_state10 = 17'd256;
parameter    ap_ST_fsm_pp1_stage0 = 17'd512;
parameter    ap_ST_fsm_state13 = 17'd1024;
parameter    ap_ST_fsm_state14 = 17'd2048;
parameter    ap_ST_fsm_state15 = 17'd4096;
parameter    ap_ST_fsm_state16 = 17'd8192;
parameter    ap_ST_fsm_state17 = 17'd16384;
parameter    ap_ST_fsm_state18 = 17'd32768;
parameter    ap_ST_fsm_state19 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] c_address0;
output   c_ce0;
output   c_we0;
output  [0:0] c_d0;
input  [0:0] c_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] c_address0;
reg c_ce0;
reg c_we0;
reg[0:0] c_d0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [14:0] decode_bool_H_address0;
reg    decode_bool_H_ce0;
wire   [0:0] decode_bool_H_q0;
reg   [7:0] P_address0;
reg    P_ce0;
wire   [4:0] P_q0;
reg   [14:0] r_V_address0;
reg    r_V_ce0;
wire   [4:0] r_V_q0;
reg    r_V_ce1;
reg    r_V_we1;
reg    r_copy_V_ce0;
wire   [4:0] r_copy_V_q0;
reg   [7:0] r_copy_V_address1;
reg    r_copy_V_ce1;
reg    r_copy_V_we1;
reg   [4:0] r_copy_V_d1;
reg    q_V_ce0;
wire   [4:0] q_V_q0;
reg    q_V_ce1;
reg    q_V_we1;
reg   [7:0] qi_V_address0;
reg    qi_V_ce0;
wire   [7:0] qi_V_q0;
reg    qi_V_ce1;
reg    qi_V_we1;
reg   [8:0] i_0_reg_216;
reg   [8:0] i_0_i_reg_250;
wire   [6:0] add_ln173_fu_310_p2;
reg   [6:0] add_ln173_reg_418;
wire    ap_CS_fsm_state2;
wire   [7:0] add_ln173_1_fu_316_p2;
reg   [7:0] add_ln173_1_reg_423;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln173_fu_330_p1;
reg   [63:0] zext_ln173_reg_428;
wire   [0:0] icmp_ln173_fu_335_p2;
reg   [0:0] icmp_ln173_reg_438;
wire   [0:0] icmp_ln173_1_fu_341_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln185_fu_347_p2;
reg   [0:0] icmp_ln185_reg_446;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] i_fu_353_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln187_fu_359_p1;
reg   [63:0] zext_ln187_reg_455;
wire   [0:0] icmp_ln887_fu_371_p2;
reg   [0:0] icmp_ln887_reg_465;
wire    ap_CS_fsm_state8;
wire   [2:0] diedai_V_fu_377_p2;
reg   [2:0] diedai_V_reg_469;
wire   [0:0] icmp_ln153_fu_383_p2;
wire    ap_CS_fsm_state10;
wire   [7:0] j_fu_389_p2;
reg   [7:0] j_reg_481;
wire   [0:0] icmp_ln155_fu_395_p2;
wire   [0:0] icmp_ln157_fu_401_p2;
reg   [0:0] icmp_ln157_reg_490;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [8:0] i_1_fu_407_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln159_fu_413_p1;
reg   [63:0] zext_ln159_reg_499;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state11;
reg    ap_enable_reg_pp1_iter1;
reg   [14:0] H_address0;
reg    H_ce0;
reg    H_we0;
wire   [0:0] H_q0;
reg    H_ce1;
wire   [0:0] H_q1;
wire    grp_check_note_update_fu_261_ap_start;
wire    grp_check_note_update_fu_261_ap_done;
wire    grp_check_note_update_fu_261_ap_idle;
wire    grp_check_note_update_fu_261_ap_ready;
wire   [14:0] grp_check_note_update_fu_261_H_address0;
wire    grp_check_note_update_fu_261_H_ce0;
wire   [14:0] grp_check_note_update_fu_261_H_address1;
wire    grp_check_note_update_fu_261_H_ce1;
wire   [14:0] grp_check_note_update_fu_261_r_V_4_address0;
wire    grp_check_note_update_fu_261_r_V_4_ce0;
wire   [14:0] grp_check_note_update_fu_261_r_V_4_address1;
wire    grp_check_note_update_fu_261_r_V_4_ce1;
wire    grp_check_note_update_fu_261_r_V_4_we1;
wire   [4:0] grp_check_note_update_fu_261_r_V_4_d1;
wire   [7:0] grp_check_note_update_fu_261_r_copy_V_4_address1;
wire    grp_check_note_update_fu_261_r_copy_V_4_ce1;
wire    grp_check_note_update_fu_261_r_copy_V_4_we1;
wire   [4:0] grp_check_note_update_fu_261_r_copy_V_4_d1;
wire   [7:0] grp_check_note_update_fu_261_q_V_address0;
wire    grp_check_note_update_fu_261_q_V_ce0;
wire    grp_variable_note_pos_fu_274_ap_start;
wire    grp_variable_note_pos_fu_274_ap_done;
wire    grp_variable_note_pos_fu_274_ap_idle;
wire    grp_variable_note_pos_fu_274_ap_ready;
wire   [14:0] grp_variable_note_pos_fu_274_H_address0;
wire    grp_variable_note_pos_fu_274_H_ce0;
wire   [7:0] grp_variable_note_pos_fu_274_qi_V_4_address1;
wire    grp_variable_note_pos_fu_274_qi_V_4_ce1;
wire    grp_variable_note_pos_fu_274_qi_V_4_we1;
wire   [7:0] grp_variable_note_pos_fu_274_qi_V_4_d1;
wire   [14:0] grp_variable_note_pos_fu_274_r_V_address0;
wire    grp_variable_note_pos_fu_274_r_V_ce0;
wire    grp_check_formula_fu_285_ap_start;
wire    grp_check_formula_fu_285_ap_done;
wire    grp_check_formula_fu_285_ap_idle;
wire    grp_check_formula_fu_285_ap_ready;
wire   [7:0] grp_check_formula_fu_285_c_address0;
wire    grp_check_formula_fu_285_c_ce0;
wire   [14:0] grp_check_formula_fu_285_H_address0;
wire    grp_check_formula_fu_285_H_ce0;
wire   [0:0] grp_check_formula_fu_285_ap_return;
wire    grp_variable_note_update_fu_292_ap_start;
wire    grp_variable_note_update_fu_292_ap_done;
wire    grp_variable_note_update_fu_292_ap_idle;
wire    grp_variable_note_update_fu_292_ap_ready;
wire   [7:0] grp_variable_note_update_fu_292_r_copy_V_2_address0;
wire    grp_variable_note_update_fu_292_r_copy_V_2_ce0;
wire   [7:0] grp_variable_note_update_fu_292_q_V_2_address1;
wire    grp_variable_note_update_fu_292_q_V_2_ce1;
wire    grp_variable_note_update_fu_292_q_V_2_we1;
wire   [4:0] grp_variable_note_update_fu_292_q_V_2_d1;
wire   [7:0] grp_variable_note_update_fu_292_qi_V_2_address0;
wire    grp_variable_note_update_fu_292_qi_V_2_ce0;
wire    grp_panjue_fu_302_ap_start;
wire    grp_panjue_fu_302_ap_done;
wire    grp_panjue_fu_302_ap_idle;
wire    grp_panjue_fu_302_ap_ready;
wire   [7:0] grp_panjue_fu_302_c_address0;
wire    grp_panjue_fu_302_c_ce0;
wire    grp_panjue_fu_302_c_we0;
wire   [0:0] grp_panjue_fu_302_c_d0;
wire   [7:0] grp_panjue_fu_302_qi_V_address0;
wire    grp_panjue_fu_302_qi_V_ce0;
reg   [6:0] phi_ln173_reg_193;
reg   [7:0] phi_ln173_1_reg_205;
reg   [2:0] p_0557_0_reg_227;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state7;
reg   [7:0] j_0_i_reg_238;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state9;
reg    ap_block_state9_on_subcall_done;
reg    grp_check_note_update_fu_261_ap_start_reg;
wire    ap_CS_fsm_state15;
reg    grp_variable_note_pos_fu_274_ap_start_reg;
wire    ap_CS_fsm_state17;
reg    grp_check_formula_fu_285_ap_start_reg;
reg    grp_variable_note_update_fu_292_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_panjue_fu_302_ap_start_reg;
wire    ap_CS_fsm_state18;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln18_fu_364_p2;
wire   [14:0] tmp_fu_322_p3;
reg   [16:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 grp_check_note_update_fu_261_ap_start_reg = 1'b0;
#0 grp_variable_note_pos_fu_274_ap_start_reg = 1'b0;
#0 grp_check_formula_fu_285_ap_start_reg = 1'b0;
#0 grp_variable_note_update_fu_292_ap_start_reg = 1'b0;
#0 grp_panjue_fu_302_ap_start_reg = 1'b0;
end

decode_decode_boobkb #(
    .DataWidth( 1 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
decode_bool_H_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(decode_bool_H_address0),
    .ce0(decode_bool_H_ce0),
    .q0(decode_bool_H_q0)
);

variable_note_pos_P #(
    .DataWidth( 5 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
P_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(P_address0),
    .ce0(P_ce0),
    .q0(P_q0)
);

decode_r_V #(
    .DataWidth( 5 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
r_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r_V_address0),
    .ce0(r_V_ce0),
    .q0(r_V_q0),
    .address1(grp_check_note_update_fu_261_r_V_4_address1),
    .ce1(r_V_ce1),
    .we1(r_V_we1),
    .d1(grp_check_note_update_fu_261_r_V_4_d1)
);

decode_r_copy_V #(
    .DataWidth( 5 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
r_copy_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_variable_note_update_fu_292_r_copy_V_2_address0),
    .ce0(r_copy_V_ce0),
    .q0(r_copy_V_q0),
    .address1(r_copy_V_address1),
    .ce1(r_copy_V_ce1),
    .we1(r_copy_V_we1),
    .d1(r_copy_V_d1)
);

decode_r_copy_V #(
    .DataWidth( 5 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
q_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_check_note_update_fu_261_q_V_address0),
    .ce0(q_V_ce0),
    .q0(q_V_q0),
    .address1(grp_variable_note_update_fu_292_q_V_2_address1),
    .ce1(q_V_ce1),
    .we1(q_V_we1),
    .d1(grp_variable_note_update_fu_292_q_V_2_d1)
);

decode_qi_V #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
qi_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(qi_V_address0),
    .ce0(qi_V_ce0),
    .q0(qi_V_q0),
    .address1(grp_variable_note_pos_fu_274_qi_V_4_address1),
    .ce1(qi_V_ce1),
    .we1(qi_V_we1),
    .d1(grp_variable_note_pos_fu_274_qi_V_4_d1)
);

decode_H #(
    .DataWidth( 1 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
H_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(H_address0),
    .ce0(H_ce0),
    .we0(H_we0),
    .d0(decode_bool_H_q0),
    .q0(H_q0),
    .address1(grp_check_note_update_fu_261_H_address1),
    .ce1(H_ce1),
    .q1(H_q1)
);

check_note_update grp_check_note_update_fu_261(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_check_note_update_fu_261_ap_start),
    .ap_done(grp_check_note_update_fu_261_ap_done),
    .ap_idle(grp_check_note_update_fu_261_ap_idle),
    .ap_ready(grp_check_note_update_fu_261_ap_ready),
    .j(j_0_i_reg_238),
    .H_address0(grp_check_note_update_fu_261_H_address0),
    .H_ce0(grp_check_note_update_fu_261_H_ce0),
    .H_q0(H_q0),
    .H_address1(grp_check_note_update_fu_261_H_address1),
    .H_ce1(grp_check_note_update_fu_261_H_ce1),
    .H_q1(H_q1),
    .r_V_4_address0(grp_check_note_update_fu_261_r_V_4_address0),
    .r_V_4_ce0(grp_check_note_update_fu_261_r_V_4_ce0),
    .r_V_4_q0(r_V_q0),
    .r_V_4_address1(grp_check_note_update_fu_261_r_V_4_address1),
    .r_V_4_ce1(grp_check_note_update_fu_261_r_V_4_ce1),
    .r_V_4_we1(grp_check_note_update_fu_261_r_V_4_we1),
    .r_V_4_d1(grp_check_note_update_fu_261_r_V_4_d1),
    .r_copy_V_4_address1(grp_check_note_update_fu_261_r_copy_V_4_address1),
    .r_copy_V_4_ce1(grp_check_note_update_fu_261_r_copy_V_4_ce1),
    .r_copy_V_4_we1(grp_check_note_update_fu_261_r_copy_V_4_we1),
    .r_copy_V_4_d1(grp_check_note_update_fu_261_r_copy_V_4_d1),
    .q_V_address0(grp_check_note_update_fu_261_q_V_address0),
    .q_V_ce0(grp_check_note_update_fu_261_q_V_ce0),
    .q_V_q0(q_V_q0)
);

variable_note_pos grp_variable_note_pos_fu_274(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_variable_note_pos_fu_274_ap_start),
    .ap_done(grp_variable_note_pos_fu_274_ap_done),
    .ap_idle(grp_variable_note_pos_fu_274_ap_idle),
    .ap_ready(grp_variable_note_pos_fu_274_ap_ready),
    .H_address0(grp_variable_note_pos_fu_274_H_address0),
    .H_ce0(grp_variable_note_pos_fu_274_H_ce0),
    .H_q0(H_q0),
    .qi_V_4_address1(grp_variable_note_pos_fu_274_qi_V_4_address1),
    .qi_V_4_ce1(grp_variable_note_pos_fu_274_qi_V_4_ce1),
    .qi_V_4_we1(grp_variable_note_pos_fu_274_qi_V_4_we1),
    .qi_V_4_d1(grp_variable_note_pos_fu_274_qi_V_4_d1),
    .r_V_address0(grp_variable_note_pos_fu_274_r_V_address0),
    .r_V_ce0(grp_variable_note_pos_fu_274_r_V_ce0),
    .r_V_q0(r_V_q0)
);

check_formula grp_check_formula_fu_285(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_check_formula_fu_285_ap_start),
    .ap_done(grp_check_formula_fu_285_ap_done),
    .ap_idle(grp_check_formula_fu_285_ap_idle),
    .ap_ready(grp_check_formula_fu_285_ap_ready),
    .c_address0(grp_check_formula_fu_285_c_address0),
    .c_ce0(grp_check_formula_fu_285_c_ce0),
    .c_q0(c_q0),
    .H_address0(grp_check_formula_fu_285_H_address0),
    .H_ce0(grp_check_formula_fu_285_H_ce0),
    .H_q0(H_q0),
    .ap_return(grp_check_formula_fu_285_ap_return)
);

variable_note_update grp_variable_note_update_fu_292(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_variable_note_update_fu_292_ap_start),
    .ap_done(grp_variable_note_update_fu_292_ap_done),
    .ap_idle(grp_variable_note_update_fu_292_ap_idle),
    .ap_ready(grp_variable_note_update_fu_292_ap_ready),
    .r_copy_V_2_address0(grp_variable_note_update_fu_292_r_copy_V_2_address0),
    .r_copy_V_2_ce0(grp_variable_note_update_fu_292_r_copy_V_2_ce0),
    .r_copy_V_2_q0(r_copy_V_q0),
    .q_V_2_address1(grp_variable_note_update_fu_292_q_V_2_address1),
    .q_V_2_ce1(grp_variable_note_update_fu_292_q_V_2_ce1),
    .q_V_2_we1(grp_variable_note_update_fu_292_q_V_2_we1),
    .q_V_2_d1(grp_variable_note_update_fu_292_q_V_2_d1),
    .qi_V_2_address0(grp_variable_note_update_fu_292_qi_V_2_address0),
    .qi_V_2_ce0(grp_variable_note_update_fu_292_qi_V_2_ce0),
    .qi_V_2_q0(qi_V_q0)
);

panjue grp_panjue_fu_302(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_panjue_fu_302_ap_start),
    .ap_done(grp_panjue_fu_302_ap_done),
    .ap_idle(grp_panjue_fu_302_ap_idle),
    .ap_ready(grp_panjue_fu_302_ap_ready),
    .c_address0(grp_panjue_fu_302_c_address0),
    .c_ce0(grp_panjue_fu_302_c_ce0),
    .c_we0(grp_panjue_fu_302_c_we0),
    .c_d0(grp_panjue_fu_302_c_d0),
    .qi_V_address0(grp_panjue_fu_302_qi_V_address0),
    .qi_V_ce0(grp_panjue_fu_302_qi_V_ce0),
    .qi_V_q0(qi_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln173_1_fu_341_p2 == 1'd1) & (icmp_ln173_reg_438 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln173_1_fu_341_p2 == 1'd1) & (icmp_ln173_reg_438 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln153_fu_383_p2 == 1'd0) & (icmp_ln155_fu_395_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state11))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln153_fu_383_p2 == 1'd0) & (icmp_ln155_fu_395_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_check_formula_fu_285_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln887_fu_371_p2 == 1'd0))) begin
            grp_check_formula_fu_285_ap_start_reg <= 1'b1;
        end else if ((grp_check_formula_fu_285_ap_ready == 1'b1)) begin
            grp_check_formula_fu_285_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_check_note_update_fu_261_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_check_note_update_fu_261_ap_start_reg <= 1'b1;
        end else if ((grp_check_note_update_fu_261_ap_ready == 1'b1)) begin
            grp_check_note_update_fu_261_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_panjue_fu_302_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_panjue_fu_302_ap_start_reg <= 1'b1;
        end else if ((grp_panjue_fu_302_ap_ready == 1'b1)) begin
            grp_panjue_fu_302_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_variable_note_pos_fu_274_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln153_fu_383_p2 == 1'd1))) begin
            grp_variable_note_pos_fu_274_ap_start_reg <= 1'b1;
        end else if ((grp_variable_note_pos_fu_274_ap_ready == 1'b1)) begin
            grp_variable_note_pos_fu_274_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_variable_note_update_fu_292_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_variable_note_update_fu_292_ap_start_reg <= 1'b1;
        end else if ((grp_variable_note_update_fu_292_ap_ready == 1'b1)) begin
            grp_variable_note_update_fu_292_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln153_fu_383_p2 == 1'd0) & (icmp_ln155_fu_395_p2 == 1'd1))) begin
        i_0_i_reg_250 <= 9'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln157_fu_401_p2 == 1'd0))) begin
        i_0_i_reg_250 <= i_1_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln185_fu_347_p2 == 1'd0))) begin
        i_0_reg_216 <= i_fu_353_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln173_1_fu_341_p2 == 1'd1) & (icmp_ln173_reg_438 == 1'd1))) begin
        i_0_reg_216 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & (grp_check_formula_fu_285_ap_return == 1'd0) & (icmp_ln887_reg_465 == 1'd0))) begin
        j_0_i_reg_238 <= 8'd0;
    end else if (((grp_check_note_update_fu_261_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        j_0_i_reg_238 <= j_reg_481;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_0557_0_reg_227 <= 3'd0;
    end else if (((grp_panjue_fu_302_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        p_0557_0_reg_227 <= diedai_V_reg_469;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln173_reg_438 == 1'd0))) begin
        phi_ln173_1_reg_205 <= add_ln173_1_reg_423;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln173_1_reg_205 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln173_1_fu_341_p2 == 1'd0) & (icmp_ln173_reg_438 == 1'd1))) begin
        phi_ln173_reg_193 <= add_ln173_reg_418;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln173_reg_193 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln173_1_reg_423 <= add_ln173_1_fu_316_p2;
        icmp_ln173_reg_438 <= icmp_ln173_fu_335_p2;
        zext_ln173_reg_428[14 : 0] <= zext_ln173_fu_330_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln173_reg_418 <= add_ln173_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        diedai_V_reg_469 <= diedai_V_fu_377_p2;
        icmp_ln887_reg_465 <= icmp_ln887_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln157_reg_490 <= icmp_ln157_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln185_reg_446 <= icmp_ln185_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_reg_481 <= j_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln157_fu_401_p2 == 1'd0))) begin
        zext_ln159_reg_499[8 : 0] <= zext_ln159_fu_413_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln185_fu_347_p2 == 1'd0))) begin
        zext_ln187_reg_455[8 : 0] <= zext_ln187_fu_359_p1[8 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        H_address0 = zext_ln173_reg_428;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln887_reg_465 == 1'd0))) begin
        H_address0 = grp_check_formula_fu_285_H_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        H_address0 = grp_variable_note_pos_fu_274_H_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        H_address0 = grp_check_note_update_fu_261_H_address0;
    end else begin
        H_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        H_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln887_reg_465 == 1'd0))) begin
        H_ce0 = grp_check_formula_fu_285_H_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        H_ce0 = grp_variable_note_pos_fu_274_H_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        H_ce0 = grp_check_note_update_fu_261_H_ce0;
    end else begin
        H_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        H_ce1 = grp_check_note_update_fu_261_H_ce1;
    end else begin
        H_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        H_we0 = 1'b1;
    end else begin
        H_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        P_address0 = zext_ln187_fu_359_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        P_address0 = 8'd0;
    end else begin
        P_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        P_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        P_ce0 = 1'b0;
    end else begin
        P_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln185_fu_347_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln157_fu_401_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & ((grp_check_formula_fu_285_ap_return == 1'd1) | (icmp_ln887_reg_465 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & ((grp_check_formula_fu_285_ap_return == 1'd1) | (icmp_ln887_reg_465 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_address0 = zext_ln187_reg_455;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c_address0 = grp_panjue_fu_302_c_address0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln887_reg_465 == 1'd0))) begin
        c_address0 = grp_check_formula_fu_285_c_address0;
    end else begin
        c_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c_ce0 = grp_panjue_fu_302_c_ce0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln887_reg_465 == 1'd0))) begin
        c_ce0 = grp_check_formula_fu_285_c_ce0;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_d0 = icmp_ln18_fu_364_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c_d0 = grp_panjue_fu_302_c_d0;
    end else begin
        c_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln185_reg_446 == 1'd0))) begin
        c_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        c_we0 = grp_panjue_fu_302_c_we0;
    end else begin
        c_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        decode_bool_H_ce0 = 1'b1;
    end else begin
        decode_bool_H_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        q_V_ce0 = grp_check_note_update_fu_261_q_V_ce0;
    end else begin
        q_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        q_V_ce1 = grp_variable_note_update_fu_292_q_V_2_ce1;
    end else begin
        q_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        q_V_we1 = grp_variable_note_update_fu_292_q_V_2_we1;
    end else begin
        q_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        qi_V_address0 = grp_panjue_fu_302_qi_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qi_V_address0 = grp_variable_note_update_fu_292_qi_V_2_address0;
    end else begin
        qi_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        qi_V_ce0 = grp_panjue_fu_302_qi_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        qi_V_ce0 = grp_variable_note_update_fu_292_qi_V_2_ce0;
    end else begin
        qi_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        qi_V_ce1 = grp_variable_note_pos_fu_274_qi_V_4_ce1;
    end else begin
        qi_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        qi_V_we1 = grp_variable_note_pos_fu_274_qi_V_4_we1;
    end else begin
        qi_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        r_V_address0 = zext_ln159_fu_413_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_V_address0 = grp_variable_note_pos_fu_274_r_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_V_address0 = grp_check_note_update_fu_261_r_V_4_address0;
    end else begin
        r_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        r_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_V_ce0 = grp_variable_note_pos_fu_274_r_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_V_ce0 = grp_check_note_update_fu_261_r_V_4_ce0;
    end else begin
        r_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        r_V_ce1 = grp_check_note_update_fu_261_r_V_4_ce1;
    end else begin
        r_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        r_V_we1 = grp_check_note_update_fu_261_r_V_4_we1;
    end else begin
        r_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        r_copy_V_address1 = zext_ln159_reg_499;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_copy_V_address1 = grp_check_note_update_fu_261_r_copy_V_4_address1;
    end else begin
        r_copy_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        r_copy_V_ce0 = grp_variable_note_update_fu_292_r_copy_V_2_ce0;
    end else begin
        r_copy_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        r_copy_V_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_copy_V_ce1 = grp_check_note_update_fu_261_r_copy_V_4_ce1;
    end else begin
        r_copy_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        r_copy_V_d1 = r_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_copy_V_d1 = grp_check_note_update_fu_261_r_copy_V_4_d1;
    end else begin
        r_copy_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln157_reg_490 == 1'd0))) begin
        r_copy_V_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_copy_V_we1 = grp_check_note_update_fu_261_r_copy_V_4_we1;
    end else begin
        r_copy_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln173_1_fu_341_p2 == 1'd1) & (icmp_ln173_reg_438 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln173_1_fu_341_p2 == 1'd0) & (icmp_ln173_reg_438 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln185_fu_347_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln185_fu_347_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & ((grp_check_formula_fu_285_ap_return == 1'd1) | (icmp_ln887_reg_465 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & (grp_check_formula_fu_285_ap_return == 1'd0) & (icmp_ln887_reg_465 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln153_fu_383_p2 == 1'd0) & (icmp_ln155_fu_395_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln155_fu_395_p2 == 1'd0) & (icmp_ln153_fu_383_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln157_fu_401_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln157_fu_401_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_variable_note_update_fu_292_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_check_note_update_fu_261_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((grp_variable_note_pos_fu_274_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_panjue_fu_302_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln173_1_fu_316_p2 = (phi_ln173_1_reg_205 + 8'd1);

assign add_ln173_fu_310_p2 = (phi_ln173_reg_193 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_on_subcall_done = ((grp_check_formula_fu_285_ap_done == 1'b0) & (icmp_ln887_reg_465 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign decode_bool_H_address0 = zext_ln173_fu_330_p1;

assign diedai_V_fu_377_p2 = (p_0557_0_reg_227 + 3'd1);

assign grp_check_formula_fu_285_ap_start = grp_check_formula_fu_285_ap_start_reg;

assign grp_check_note_update_fu_261_ap_start = grp_check_note_update_fu_261_ap_start_reg;

assign grp_panjue_fu_302_ap_start = grp_panjue_fu_302_ap_start_reg;

assign grp_variable_note_pos_fu_274_ap_start = grp_variable_note_pos_fu_274_ap_start_reg;

assign grp_variable_note_update_fu_292_ap_start = grp_variable_note_update_fu_292_ap_start_reg;

assign i_1_fu_407_p2 = (i_0_i_reg_250 + 9'd1);

assign i_fu_353_p2 = (i_0_reg_216 + 9'd1);

assign icmp_ln153_fu_383_p2 = ((j_0_i_reg_238 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_395_p2 = ((j_0_i_reg_238 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln157_fu_401_p2 = ((i_0_i_reg_250 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln173_1_fu_341_p2 = ((phi_ln173_reg_193 == 7'd127) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_335_p2 = ((phi_ln173_1_reg_205 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_347_p2 = ((i_0_reg_216 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_364_p2 = (($signed(P_q0) < $signed(5'd1)) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_371_p2 = ((p_0557_0_reg_227 == 3'd5) ? 1'b1 : 1'b0);

assign j_fu_389_p2 = (j_0_i_reg_238 + 8'd1);

assign tmp_fu_322_p3 = {{phi_ln173_reg_193}, {phi_ln173_1_reg_205}};

assign zext_ln159_fu_413_p1 = i_0_i_reg_250;

assign zext_ln173_fu_330_p1 = tmp_fu_322_p3;

assign zext_ln187_fu_359_p1 = i_0_reg_216;

always @ (posedge ap_clk) begin
    zext_ln173_reg_428[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln187_reg_455[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln159_reg_499[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //decode
